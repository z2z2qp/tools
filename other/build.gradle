import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.hibernate.orm' version '6.2.13.Final'
    id 'org.graalvm.buildtools.native' version '0.9.23'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.20'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.20'
}

group = 'cn.zjujri'
version = '0.0.6-SNAPSHOT'
java{
    sourceCompatibility = '21'
}
repositories {
//    maven {
//        allowInsecureProtocol = true
//        url 'http://10.100.1.235:8081/repository/maven-public/'
//    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:4.0.0'
    implementation 'com.drewnoakes:metadata-extractor:2.18.0'
    implementation 'org.flywaydb:flyway-core:9.10.1'
    runtimeOnly 'com.h2database:h2:2.1.214'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '21'
    }
}

tasks.register('updateVersion') {
    String versionFileDir = projectDir.getAbsolutePath() + File.separatorChar + 'src' + File.separatorChar + 'main' + File.separatorChar + 'java' + File.separatorChar + 'cn' + File.separatorChar + 'zjujri' + File.separatorChar + 'workday' + File.separatorChar + 'module' + File.separatorChar + 'Version.kt'
    def oldBuildTime = oldValue(versionFileDir, "buildTime")
    def index = oldBuildTime.indexOf("=")
    def buildTime = oldBuildTime.substring(0, index + 1) + ' "' + new Date().format("yyyy-MM-dd HH:mm:ss") + '"'
    def updateContext = new File(versionFileDir).getText('UTF-8').replaceAll(oldBuildTime, buildTime)
    new File(versionFileDir).write(updateContext, 'UTF-8')
}

def static oldValue(String path, String key) {
    def readString = ''
    new File(path).withReader('UTF-8') { reader ->
        reader.eachLine { str ->
            if (str.contains(key)) {
                readString = str
                return readString
            }
        }
    }
    return readString
}

graalvmNative {
    binaries {
        main {
            buildArgs.add("-H:+ReportExceptionStackTraces")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.AppenderRefModel")
            buildArgs.add("--initialize-at-build-time=java.lang.String")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.classic.model.RootLoggerModel")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.ComponentModel")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.classic.model.ConfigurationModel")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.PropertyModel")
            buildArgs.add("--initialize-at-build-time=java.lang.Boolean")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.classic.model.LoggerModel")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.Model")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.NamedModel")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.AppenderModel")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.ImplicitModel")
            buildArgs.add("--initialize-at-build-time=java.lang.Integer")
            buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.model.NamedComponentModel")
            buildArgs.add("--initialize-at-build-time=java.util.ArrayList")
            buildArgs.add("--report-unsupported-elements-at-runtime")
            buildArgs.add("--allow-incomplete-classpath")
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
